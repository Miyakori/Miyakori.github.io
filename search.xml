<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>mysql基础</title>
      <link href="/2024/05/03/mysql-ji-chu/"/>
      <url>/2024/05/03/mysql-ji-chu/</url>
      
        <content type="html"><![CDATA[<h2 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h2><h3 id="select"><a href="#select" class="headerlink" title="select"></a>select</h3><p>*：所有列</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span>    first_name<span class="token punctuation">,</span>    last_name<span class="token punctuation">,</span>    points<span class="token punctuation">,</span>    points<span class="token operator">+</span><span class="token number">10</span> <span class="token keyword">AS</span> <span class="token string">'discount factor'</span><span class="token keyword">FROM</span> customers<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>顺序和代码一致,可以加上运算符</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token keyword">DISTINCT</span>    points<span class="token keyword">FROM</span> customers<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>DISTINCT:不显示重复的值</p><h3 id="where"><a href="#where" class="headerlink" title="where"></a>where</h3><p>日期要带上引号：’1990-01-01’<br>AND OR NOT<br>IN、NOT IN</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span><span class="token keyword">FROM</span> customers<span class="token keyword">WHERE</span> state <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token string">'VA'</span><span class="token punctuation">,</span><span class="token string">'FL'</span><span class="token punctuation">,</span><span class="token string">'GA'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="between"><a href="#between" class="headerlink" title="between"></a>between</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span><span class="token keyword">FROM</span> customers<span class="token keyword">WHERE</span> points <span class="token operator">BETWEEN</span> <span class="token number">1000</span> <span class="token operator">AND</span> <span class="token number">3000</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="like"><a href="#like" class="headerlink" title="like"></a>like</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span><span class="token keyword">FROM</span> customers<span class="token keyword">WHERE</span> last_name <span class="token operator">LIKE</span> <span class="token string">'%field%'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>%:任意个字符<br>_:任意一个字符</p><h4 id="regexp"><a href="#regexp" class="headerlink" title="regexp"></a>regexp</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span><span class="token keyword">FROM</span> customers<span class="token keyword">WHERE</span> last_name <span class="token operator">REGEXP</span> <span class="token string">'field'</span><span class="token operator">^</span>:字符串开头 <span class="token operator">^</span>field$:字符串结尾 field$<span class="token operator">|</span>:或者 field$<span class="token operator">|</span>mac<span class="token operator">|</span>rose<span class="token punctuation">[</span><span class="token punctuation">]</span>:可能的字符 <span class="token punctuation">[</span>gim<span class="token punctuation">]</span>e即ge、ie、me  <span class="token punctuation">[</span>a<span class="token operator">-</span>h<span class="token punctuation">]</span>:a到h这个范围<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="null"><a href="#null" class="headerlink" title="null"></a>null</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span><span class="token keyword">FROM</span> customers<span class="token keyword">WHERE</span> phone <span class="token operator">IS</span> <span class="token boolean">NULL</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="order-by"><a href="#order-by" class="headerlink" title="order by"></a>order by</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span><span class="token keyword">FROM</span> customers<span class="token keyword">ORDER</span> <span class="token keyword">BY</span> first_name <span class="token keyword">DESC</span><span class="token keyword">DESC</span>:降序<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="limit"><a href="#limit" class="headerlink" title="limit"></a>limit</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span><span class="token keyword">FROM</span> customers<span class="token keyword">LIMIT</span> <span class="token number">6</span><span class="token punctuation">,</span><span class="token number">3</span> <span class="token number">6</span>为偏移量（不写默认为<span class="token number">0</span>），<span class="token number">3</span>为显示的个数<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="第三章"><a href="#第三章" class="headerlink" title="第三章"></a>第三章</h2><h3 id="内连接"><a href="#内连接" class="headerlink" title="内连接"></a>内连接</h3><h4 id="join"><a href="#join" class="headerlink" title="join"></a>join</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">USE</span> sql_store<span class="token punctuation">;</span><span class="token keyword">SELECT</span> order_id<span class="token punctuation">,</span>orders<span class="token punctuation">.</span>customer_id<span class="token punctuation">,</span>first_name<span class="token punctuation">,</span>last_name<span class="token keyword">FROM</span> orders<span class="token keyword">JOIN</span> customers <span class="token keyword">ON</span> orders<span class="token punctuation">.</span>customer_id <span class="token operator">=</span> customers<span class="token punctuation">.</span>customer_id<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>选择相同列要指明是哪张表的</p><h4 id="简化"><a href="#简化" class="headerlink" title="简化"></a>简化</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">USE</span> sql_store<span class="token punctuation">;</span><span class="token keyword">SELECT</span> order_id<span class="token punctuation">,</span>oi<span class="token punctuation">.</span>product_id<span class="token punctuation">,</span>quantity<span class="token punctuation">,</span>oi<span class="token punctuation">.</span>unit_price<span class="token keyword">FROM</span> order_items <span class="token keyword">AS</span> oi<span class="token keyword">JOIN</span> products p<span class="token keyword">ON</span> oi<span class="token punctuation">.</span>product_id <span class="token operator">=</span> p<span class="token punctuation">.</span>product_id<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="跨数据库连接"><a href="#跨数据库连接" class="headerlink" title="跨数据库连接"></a>跨数据库连接</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">JOIN</span> sql_inventory<span class="token punctuation">.</span>products p    <span class="token keyword">ON</span> oi<span class="token punctuation">.</span>product_id <span class="token operator">=</span> p<span class="token punctuation">.</span>product_id<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>同上，要给没选中的数据库的表前面加上数据库名</p><h3 id="自连接"><a href="#自连接" class="headerlink" title="自连接"></a>自连接</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">USE</span> sql_hr<span class="token punctuation">;</span><span class="token keyword">SELECT</span>     e<span class="token punctuation">.</span>employee_id<span class="token punctuation">,</span>    e<span class="token punctuation">.</span>first_name<span class="token punctuation">,</span>    m<span class="token punctuation">.</span>first_name <span class="token keyword">AS</span> manager<span class="token keyword">FROM</span> employees e<span class="token keyword">JOIN</span> employees m<span class="token keyword">ON</span> e<span class="token punctuation">.</span>reports_to <span class="token operator">=</span> m<span class="token punctuation">.</span>employee_id<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="多表连接"><a href="#多表连接" class="headerlink" title="多表连接"></a>多表连接</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">USE</span> sql_invoicing<span class="token punctuation">;</span><span class="token keyword">SELECT</span>     p<span class="token punctuation">.</span><span class="token keyword">date</span><span class="token punctuation">,</span>    p<span class="token punctuation">.</span>invoice_id<span class="token punctuation">,</span>    p<span class="token punctuation">.</span>amount<span class="token punctuation">,</span>c<span class="token punctuation">.</span>name<span class="token punctuation">,</span>    pm<span class="token punctuation">.</span>name <span class="token keyword">AS</span> payment_method<span class="token keyword">FROM</span> payments p<span class="token keyword">JOIN</span> payment_methods pm<span class="token keyword">ON</span> p<span class="token punctuation">.</span>payment_method <span class="token operator">=</span> pm<span class="token punctuation">.</span>payment_method_id<span class="token keyword">JOIN</span> clients c<span class="token keyword">ON</span> p<span class="token punctuation">.</span>client_id <span class="token operator">=</span> c<span class="token punctuation">.</span>client_id<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="复合连接条件"><a href="#复合连接条件" class="headerlink" title="复合连接条件"></a>复合连接条件</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">USE</span> sql_store<span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span><span class="token keyword">FROM</span> order_items oi<span class="token keyword">JOIN</span> order_item_notes oin    <span class="token keyword">ON</span> oi<span class="token punctuation">.</span>order_id <span class="token operator">=</span> oin<span class="token punctuation">.</span>order_id    <span class="token operator">AND</span> oi<span class="token punctuation">.</span>product_id <span class="token operator">=</span> oin<span class="token punctuation">.</span>product_id<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="隐式连接（不建议）"><a href="#隐式连接（不建议）" class="headerlink" title="隐式连接（不建议）"></a>隐式连接（不建议）</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span><span class="token keyword">FROM</span> orders o<span class="token punctuation">,</span> customers c<span class="token keyword">WHERE</span> o<span class="token punctuation">.</span>customer_id <span class="token operator">=</span> c<span class="token punctuation">.</span>customer_id<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="外连接"><a href="#外连接" class="headerlink" title="外连接"></a>外连接</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span>    c<span class="token punctuation">.</span>customer_id<span class="token punctuation">,</span>    c<span class="token punctuation">.</span>first_name<span class="token punctuation">,</span>    o<span class="token punctuation">.</span>order_id<span class="token keyword">FROM</span> customers c<span class="token keyword">LEFT</span> <span class="token punctuation">(</span><span class="token keyword">OUTER</span><span class="token punctuation">)</span> <span class="token keyword">JOIN</span> orders o<span class="token keyword">ON</span> c<span class="token punctuation">.</span>customer_id <span class="token operator">=</span> o<span class="token punctuation">.</span>customer_id<span class="token keyword">ORDER</span> <span class="token keyword">BY</span> c<span class="token punctuation">.</span>customer_id<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>LEFT:显示FROM表的全元素<br>RIGHT:显示JOIN表的全元素<br>OUTER关键字可省略</p><h3 id="多表外连接"><a href="#多表外连接" class="headerlink" title="多表外连接"></a>多表外连接</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span>c<span class="token punctuation">.</span>customer_id<span class="token punctuation">,</span>    c<span class="token punctuation">.</span>first_name<span class="token punctuation">,</span>    o<span class="token punctuation">.</span>order_id<span class="token punctuation">,</span>    sh<span class="token punctuation">.</span>name <span class="token keyword">AS</span> shipper<span class="token keyword">FROM</span> customers c<span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> orders o<span class="token keyword">ON</span> c<span class="token punctuation">.</span>customer_id <span class="token operator">=</span> o<span class="token punctuation">.</span>customer_id<span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> shippers sh<span class="token keyword">ON</span> o<span class="token punctuation">.</span>shipper_id <span class="token operator">=</span> sh<span class="token punctuation">.</span>shipper_id<span class="token keyword">ORDER</span> <span class="token keyword">BY</span> c<span class="token punctuation">.</span>customer_id<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>多表外连接尽量用左连接</p><h3 id="自外连接"><a href="#自外连接" class="headerlink" title="自外连接"></a>自外连接</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">USE</span> sql_hr<span class="token punctuation">;</span><span class="token keyword">SELECT</span>     e<span class="token punctuation">.</span>employee_id<span class="token punctuation">,</span>    e<span class="token punctuation">.</span>first_name<span class="token punctuation">,</span>    m<span class="token punctuation">.</span>first_name <span class="token keyword">AS</span> manager<span class="token keyword">FROM</span> employees e<span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> employees m<span class="token keyword">ON</span> e<span class="token punctuation">.</span>reports_to <span class="token operator">=</span> m<span class="token punctuation">.</span>employee_id<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="using"><a href="#using" class="headerlink" title="using"></a>using</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">JOIN</span> customers c    <span class="token comment">-- ON o.customer_id = c.customer_id</span>    <span class="token keyword">USING</span> <span class="token punctuation">(</span>customer_id<span class="token punctuation">)</span><span class="token keyword">JOIN</span> shippers sh    <span class="token keyword">USING</span> <span class="token punctuation">(</span>shipper_id<span class="token punctuation">)</span>    <span class="token keyword">USING</span> <span class="token punctuation">(</span>order_id<span class="token punctuation">,</span>product_id<span class="token punctuation">)</span>   <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>只能在名字完全相同时使用</p><h3 id="自然连接-不推荐"><a href="#自然连接-不推荐" class="headerlink" title="自然连接(不推荐)"></a>自然连接(不推荐)</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">NATURAL</span> <span class="token keyword">JOIN</span> customers s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="交叉连接-笛卡尔积"><a href="#交叉连接-笛卡尔积" class="headerlink" title="交叉连接(笛卡尔积)"></a>交叉连接(笛卡尔积)</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 显式交叉</span><span class="token keyword">FROM</span> customers c<span class="token keyword">CROSS</span> <span class="token keyword">JOIN</span> products p<span class="token comment">-- 隐式交叉</span><span class="token keyword">FROM</span> customers c<span class="token punctuation">,</span> orders o<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="联合"><a href="#联合" class="headerlink" title="联合"></a>联合</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">USE</span> sql_store<span class="token punctuation">;</span><span class="token keyword">SELECT</span> c<span class="token punctuation">.</span>customer_id<span class="token punctuation">,</span>    c<span class="token punctuation">.</span>first_name<span class="token punctuation">,</span>    c<span class="token punctuation">.</span>points<span class="token punctuation">,</span>    <span class="token string">"Bronze"</span> <span class="token keyword">AS</span> <span class="token keyword">type</span><span class="token keyword">FROM</span> customers c<span class="token keyword">WHERE</span> c<span class="token punctuation">.</span>points<span class="token operator">&lt;</span><span class="token number">2000</span><span class="token keyword">UNION</span><span class="token keyword">SELECT</span> c<span class="token punctuation">.</span>customer_id<span class="token punctuation">,</span>    c<span class="token punctuation">.</span>first_name<span class="token punctuation">,</span>    c<span class="token punctuation">.</span>points<span class="token punctuation">,</span>    <span class="token string">"Sliver"</span> <span class="token keyword">AS</span> <span class="token keyword">type</span><span class="token keyword">FROM</span> customers c<span class="token keyword">WHERE</span> c<span class="token punctuation">.</span>points<span class="token operator">>=</span><span class="token number">2000</span> <span class="token operator">AND</span> c<span class="token punctuation">.</span>points<span class="token operator">&lt;</span><span class="token number">3000</span><span class="token keyword">UNION</span><span class="token keyword">SELECT</span> c<span class="token punctuation">.</span>customer_id<span class="token punctuation">,</span>    c<span class="token punctuation">.</span>first_name<span class="token punctuation">,</span>    c<span class="token punctuation">.</span>points<span class="token punctuation">,</span>    <span class="token string">"Gold"</span> <span class="token keyword">AS</span> <span class="token keyword">type</span><span class="token keyword">FROM</span> customers c<span class="token keyword">WHERE</span> c<span class="token punctuation">.</span>points<span class="token operator">>=</span><span class="token number">3000</span><span class="token keyword">ORDER</span> <span class="token keyword">BY</span> first_name<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>UNION ALL不去重</p><h2 id="第四章"><a href="#第四章" class="headerlink" title="第四章"></a>第四章</h2><h3 id="插入单行"><a href="#插入单行" class="headerlink" title="插入单行"></a>插入单行</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 列出全部值</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> customers<span class="token keyword">VALUES</span> <span class="token punctuation">(</span>    <span class="token keyword">DEFAULT</span><span class="token punctuation">,</span>    <span class="token string">'John'</span><span class="token punctuation">,</span>    <span class="token string">'Smith'</span><span class="token punctuation">,</span>    <span class="token string">'1990-01-10'</span><span class="token punctuation">,</span>    <span class="token boolean">NULL</span><span class="token punctuation">,</span>    <span class="token string">'address'</span><span class="token punctuation">,</span>    <span class="token string">'city'</span><span class="token punctuation">,</span>    <span class="token string">'CA'</span><span class="token punctuation">,</span>    <span class="token keyword">DEFAULT</span>    <span class="token punctuation">)</span><span class="token comment">-- 列出部分值</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> customers<span class="token punctuation">(</span>    first_name<span class="token punctuation">,</span>    last_name<span class="token punctuation">,</span>    birth_date<span class="token punctuation">,</span>    address<span class="token punctuation">,</span>    city<span class="token punctuation">,</span>    state<span class="token punctuation">)</span><span class="token keyword">VALUES</span> <span class="token punctuation">(</span>    <span class="token string">'John'</span><span class="token punctuation">,</span>    <span class="token string">'Smith'</span><span class="token punctuation">,</span>    <span class="token string">'1990-01-10'</span><span class="token punctuation">,</span>    <span class="token string">'address'</span><span class="token punctuation">,</span>    <span class="token string">'city'</span><span class="token punctuation">,</span>    <span class="token string">'CA'</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>replace into 跟 insert into功能类似，不同点在于：replace into 首先尝试插入数据到表中，<br>如果发现表中已经有此行数据（根据主键或者唯一索引判断）则先删除此行数据，然后插入新的数据;否则，直接插入新数据。<br>要注意的是：插入数据的表必须有主键或者是唯一索引！<br>否则的话，REPLACE INTO 会直接插入数据，这将导致表中出现重复的数据。</p><h3 id="插入多行"><a href="#插入多行" class="headerlink" title="插入多行"></a>插入多行</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> products <span class="token punctuation">(</span>name<span class="token punctuation">,</span>quantity_in_stock<span class="token punctuation">,</span>unit_price<span class="token punctuation">)</span><span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">'product_1'</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">(</span><span class="token string">'product_2'</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">(</span><span class="token string">'pruduct_3'</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token comment">-- SELECT</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> exam_record_before_2021 <span class="token punctuation">(</span>uid<span class="token punctuation">,</span>exam_id<span class="token punctuation">,</span>start_time<span class="token punctuation">,</span>submit_time<span class="token punctuation">,</span>score<span class="token punctuation">)</span><span class="token keyword">SELECT</span> uid<span class="token punctuation">,</span>exam_id<span class="token punctuation">,</span>start_time<span class="token punctuation">,</span>submit_time<span class="token punctuation">,</span>score<span class="token keyword">FROM</span> exam_record <span class="token keyword">WHERE</span> submit_time<span class="token operator">&lt;</span><span class="token string">'2021-01-01'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="插入分层行"><a href="#插入分层行" class="headerlink" title="插入分层行"></a>插入分层行</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> orders <span class="token punctuation">(</span>customer_id<span class="token punctuation">,</span>order_date<span class="token punctuation">,</span><span class="token keyword">status</span><span class="token punctuation">)</span><span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'2021-01-02'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> order_items<span class="token keyword">VALUES</span> <span class="token punctuation">(</span>last_insert_id<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2.95</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>last_insert_id<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3.95</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="创建表复制"><a href="#创建表复制" class="headerlink" title="创建表复制"></a>创建表复制</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> invoices_archive <span class="token keyword">AS</span><span class="token keyword">SELECT</span>     invoice_id<span class="token punctuation">,</span>    number<span class="token punctuation">,</span>    cl<span class="token punctuation">.</span>name <span class="token keyword">AS</span> client<span class="token punctuation">,</span>    invoice_total<span class="token punctuation">,</span>    payment_total<span class="token punctuation">,</span>    invoice_date<span class="token punctuation">,</span>    due_date<span class="token punctuation">,</span>    payment_date<span class="token keyword">FROM</span> invoices inv<span class="token keyword">JOIN</span> clients cl<span class="token keyword">ON</span> inv<span class="token punctuation">.</span>client_invoices_archiveid<span class="token operator">=</span>cl<span class="token punctuation">.</span>client_id<span class="token keyword">WHERE</span> inv<span class="token punctuation">.</span>payment_date <span class="token operator">IS</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token keyword">ORDER</span> <span class="token keyword">BY</span> inv<span class="token punctuation">.</span>invoice_id<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="更新单行"><a href="#更新单行" class="headerlink" title="更新单行"></a>更新单行</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">UPDATE</span> invoices<span class="token keyword">SET</span>     payment_total<span class="token operator">=</span>invoice_total<span class="token operator">*</span><span class="token number">0.5</span><span class="token punctuation">,</span>    payment_date<span class="token operator">=</span>due_date<span class="token keyword">WHERE</span> client_id<span class="token operator">=</span><span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="更新多行"><a href="#更新多行" class="headerlink" title="更新多行"></a>更新多行</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">UPDATE</span> customers<span class="token keyword">SET</span> points<span class="token operator">=</span>points<span class="token operator">+</span><span class="token number">50</span><span class="token keyword">WHERE</span> birth_date <span class="token operator">&lt;</span> <span class="token string">'1990-01-01'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">UPDATE</span> invoices<span class="token keyword">SET</span>     payment_total<span class="token operator">=</span>invoice_total<span class="token operator">*</span><span class="token number">0.5</span><span class="token punctuation">,</span>    payment_date<span class="token operator">=</span>due_date<span class="token keyword">WHERE</span> client_id<span class="token operator">=</span>    <span class="token punctuation">(</span><span class="token keyword">SELECT</span> client_id    <span class="token keyword">FROM</span> clients    <span class="token keyword">WHERE</span> name<span class="token operator">=</span><span class="token string">'Myworks'</span><span class="token punctuation">)</span><span class="token comment">-- 若子查询返回多条结果，则将‘=’改为‘IN’</span><span class="token keyword">UPDATE</span> invoices<span class="token keyword">SET</span>     payment_total<span class="token operator">=</span>invoice_total<span class="token operator">*</span><span class="token number">0.5</span><span class="token punctuation">,</span>    payment_date<span class="token operator">=</span>due_date<span class="token keyword">WHERE</span> client_id <span class="token operator">IN</span>    <span class="token punctuation">(</span><span class="token keyword">SELECT</span> client_id    <span class="token keyword">FROM</span> clients    <span class="token keyword">WHERE</span> state <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token string">'CA'</span><span class="token punctuation">,</span><span class="token string">'NY'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="删除行"><a href="#删除行" class="headerlink" title="删除行"></a>删除行</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> invoices<span class="token keyword">WHERE</span> client_id <span class="token operator">=</span>    <span class="token punctuation">(</span><span class="token keyword">SELECT</span> client_id    <span class="token keyword">FROM</span> clients    <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">'Myworks'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="删除表中所有数据"><a href="#删除表中所有数据" class="headerlink" title="删除表中所有数据"></a>删除表中所有数据</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">TRUNCATE</span> <span class="token keyword">TABLE</span> exam_record<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>会重置自增的值</p><h2 id="第五章"><a href="#第五章" class="headerlink" title="第五章"></a>第五章</h2><h3 id="聚合函数"><a href="#聚合函数" class="headerlink" title="聚合函数"></a>聚合函数</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span>    <span class="token function">MAX</span><span class="token punctuation">(</span>invoice_total<span class="token punctuation">)</span> <span class="token keyword">AS</span> highest<span class="token punctuation">,</span>    <span class="token function">MIN</span><span class="token punctuation">(</span>invoice_total<span class="token punctuation">)</span> <span class="token keyword">AS</span> lowest<span class="token punctuation">,</span>    <span class="token function">AVG</span><span class="token punctuation">(</span>invoice_total<span class="token punctuation">)</span> <span class="token keyword">AS</span> average<span class="token punctuation">,</span>    <span class="token function">SUM</span><span class="token punctuation">(</span>invoice_total<span class="token operator">*</span><span class="token number">1.1</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> total<span class="token punctuation">,</span>    <span class="token function">COUNT</span><span class="token punctuation">(</span>invoice_total<span class="token punctuation">)</span> <span class="token keyword">AS</span> number_of_invoices<span class="token punctuation">,</span>    <span class="token function">COUNT</span><span class="token punctuation">(</span>payment_date<span class="token punctuation">)</span> <span class="token keyword">AS</span> count_of_payments<span class="token punctuation">,</span>    <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> total_records<span class="token punctuation">,</span> <span class="token comment">-- 包含重复项</span>    <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token keyword">DISTINCT</span> client_id<span class="token punctuation">)</span> <span class="token keyword">AS</span> total_records2 <span class="token comment">-- 不含重复项</span><span class="token keyword">FROM</span> invoices<span class="token keyword">WHERE</span> invoice_date <span class="token operator">></span> <span class="token string">'2019-07-01'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="group-by语句"><a href="#group-by语句" class="headerlink" title="group by语句"></a>group by语句</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span>    client_id<span class="token punctuation">,</span>    clients<span class="token punctuation">.</span>name<span class="token punctuation">,</span>    <span class="token function">SUM</span><span class="token punctuation">(</span>invoice_total<span class="token punctuation">)</span> <span class="token keyword">AS</span> total_sales<span class="token keyword">FROM</span> invoices<span class="token keyword">JOIN</span> clients <span class="token keyword">USING</span> <span class="token punctuation">(</span>client_id<span class="token punctuation">)</span><span class="token keyword">WHERE</span> invoice_date <span class="token operator">>=</span> <span class="token string">'2019-07-01'</span><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> client_id<span class="token keyword">ORDER</span> <span class="token keyword">BY</span> total_sales <span class="token keyword">DESC</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>group by后面要跟所有的非聚合函数(如果不是一一对应的话)</p><h3 id="having语句"><a href="#having语句" class="headerlink" title="having语句"></a>having语句</h3><p>where在分组之前筛选,可筛选任何列<br>having在分组之后筛选,只能筛选select中提到的</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span>client_id<span class="token punctuation">,</span>    <span class="token function">SUM</span><span class="token punctuation">(</span>invoice_total<span class="token punctuation">)</span> <span class="token keyword">AS</span> total_sales<span class="token punctuation">,</span>    <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> number_of_invoices<span class="token keyword">FROM</span> invoices<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> client_id<span class="token keyword">HAVING</span> total_sales<span class="token operator">></span><span class="token number">500</span> <span class="token operator">AND</span> number_of_invoices<span class="token operator">></span><span class="token number">5</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="rollup语句"><a href="#rollup语句" class="headerlink" title="rollup语句"></a>rollup语句</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span>state<span class="token punctuation">,</span>    city<span class="token punctuation">,</span>    <span class="token function">SUM</span><span class="token punctuation">(</span>invoice_total<span class="token punctuation">)</span> <span class="token keyword">AS</span> total_sales<span class="token keyword">FROM</span> invoices i<span class="token keyword">JOIN</span> clients c <span class="token keyword">USING</span> <span class="token punctuation">(</span>client_id<span class="token punctuation">)</span><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> state<span class="token punctuation">,</span>city <span class="token keyword">WITH ROLLUP</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="第六章"><a href="#第六章" class="headerlink" title="第六章"></a>第六章</h2><h3 id="ALL语句"><a href="#ALL语句" class="headerlink" title="ALL语句"></a>ALL语句</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span><span class="token keyword">FROM</span> invoices<span class="token keyword">WHERE</span> invoice_total <span class="token operator">></span> <span class="token keyword">ALL</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> invoice_total    <span class="token keyword">FROM</span> invoices    <span class="token keyword">WHERE</span> client_id<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="ANY语句"><a href="#ANY语句" class="headerlink" title="ANY语句"></a>ANY语句</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span><span class="token keyword">FROM</span> clients<span class="token keyword">WHERE</span> client_id <span class="token operator">=</span> <span class="token keyword">ANY</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> client_id    <span class="token keyword">FROM</span> invoices    <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> client_id    <span class="token keyword">HAVING</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">>=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token comment">-- IN 等同于 =ANY</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="相关子查询"><a href="#相关子查询" class="headerlink" title="相关子查询"></a>相关子查询</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> employees e<span class="token keyword">WHERE</span> salary <span class="token operator">></span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token function">AVG</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span>    <span class="token keyword">FROM</span> employees    <span class="token keyword">WHERE</span> office_id <span class="token operator">=</span> e<span class="token punctuation">.</span>office_id<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="exists运算符"><a href="#exists运算符" class="headerlink" title="exists运算符"></a>exists运算符</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> clients c<span class="token keyword">WHERE</span> <span class="token keyword">EXISTS</span>  <span class="token punctuation">(</span><span class="token keyword">SELECT</span> client_id    <span class="token keyword">FROM</span> invoices    <span class="token keyword">WHERE</span> client_id <span class="token operator">=</span> c<span class="token punctuation">.</span>client_id<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>相比IN能提高性能</p><h3 id="SELECT中子查询"><a href="#SELECT中子查询" class="headerlink" title="SELECT中子查询"></a>SELECT中子查询</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token keyword">SELECT</span> client_id<span class="token punctuation">,</span>    name<span class="token punctuation">,</span>    <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token function">SUM</span><span class="token punctuation">(</span>invoice_total<span class="token punctuation">)</span><span class="token keyword">FROM</span> invoices    <span class="token keyword">WHERE</span> client_id<span class="token operator">=</span>c<span class="token punctuation">.</span>client_id<span class="token punctuation">)</span> <span class="token keyword">AS</span> total_sales<span class="token punctuation">,</span>    <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token function">AVG</span><span class="token punctuation">(</span>invoice_total<span class="token punctuation">)</span>    <span class="token keyword">FROM</span> invoices<span class="token punctuation">)</span> <span class="token keyword">AS</span> average<span class="token punctuation">,</span>    <span class="token punctuation">(</span><span class="token keyword">SELECT</span> total_sales <span class="token operator">-</span> average<span class="token punctuation">)</span> <span class="token keyword">AS</span> difference<span class="token keyword">FROM</span> clients c<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="FROM中子查询"><a href="#FROM中子查询" class="headerlink" title="FROM中子查询"></a>FROM中子查询</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span><span class="token keyword">FROM</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> client_id<span class="token punctuation">,</span>name<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token function">SUM</span><span class="token punctuation">(</span>invoice_total<span class="token punctuation">)</span><span class="token keyword">FROM</span> invoices<span class="token keyword">WHERE</span> client_id<span class="token operator">=</span>c<span class="token punctuation">.</span>client_id<span class="token punctuation">)</span> <span class="token keyword">AS</span> total_sales<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token function">AVG</span><span class="token punctuation">(</span>invoice_total<span class="token punctuation">)</span><span class="token keyword">FROM</span> invoices<span class="token punctuation">)</span> <span class="token keyword">AS</span> average<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">SELECT</span> total_sales <span class="token operator">-</span> average<span class="token punctuation">)</span> <span class="token keyword">AS</span> difference<span class="token keyword">FROM</span> clients c<span class="token punctuation">)</span> <span class="token keyword">AS</span> sales_summary<span class="token keyword">WHERE</span> total_sales <span class="token operator">IS</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="第七章"><a href="#第七章" class="headerlink" title="第七章"></a>第七章</h2><h3 id="数值函数"><a href="#数值函数" class="headerlink" title="数值函数"></a>数值函数</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 四舍五入到第几位，0表示个位，正数表示小数点后几位，</span><span class="token comment">-- -1舍入到十位，-2舍入到百位</span><span class="token keyword">SELECT</span> <span class="token function">ROUND</span><span class="token punctuation">(</span><span class="token number">5.73</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">-- 保留两位小数（直接截取，不四舍五入）</span><span class="token keyword">SELECT</span> <span class="token keyword">TRUNCATE</span><span class="token punctuation">(</span><span class="token number">5.732121</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">-- 大于或等于这个数的最小整数</span><span class="token keyword">SELECT</span> CEILING<span class="token punctuation">(</span><span class="token number">5.7</span><span class="token punctuation">)</span><span class="token comment">-- 小于或等于这个数的最大整数</span><span class="token keyword">SELECT</span> FLOOR<span class="token punctuation">(</span><span class="token number">5.2</span><span class="token punctuation">)</span><span class="token comment">-- 绝对值</span><span class="token keyword">SELECT</span> ABS<span class="token punctuation">(</span><span class="token number">5.2</span><span class="token punctuation">)</span><span class="token comment">-- 0-1随机数</span><span class="token keyword">SELECT</span> RAND<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="字符串函数"><a href="#字符串函数" class="headerlink" title="字符串函数"></a>字符串函数</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">LENGTH<span class="token punctuation">(</span><span class="token string">'sky'</span><span class="token punctuation">)</span> <span class="token comment">-- 长度</span>UPPER<span class="token punctuation">(</span><span class="token string">'sky'</span><span class="token punctuation">)</span> <span class="token comment">-- 转大写</span>LOWER<span class="token punctuation">(</span><span class="token string">'SKY'</span><span class="token punctuation">)</span> <span class="token comment">-- 转小写</span>LTRIM<span class="token punctuation">(</span><span class="token string">'   sky'</span><span class="token punctuation">)</span> <span class="token comment">-- 删除字符前面空格</span>RTRIM<span class="token punctuation">(</span><span class="token string">'sky   '</span><span class="token punctuation">)</span> <span class="token comment">-- 删除字符后面空格</span>TRIM<span class="token punctuation">(</span><span class="token string">' sky   '</span><span class="token punctuation">)</span> <span class="token comment">-- 删除字符前后面空格</span><span class="token keyword">LEFT</span><span class="token punctuation">(</span><span class="token string">'kindergarten'</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token comment">-- 取前4个字符</span><span class="token keyword">RIGHT</span><span class="token punctuation">(</span><span class="token string">'kindergarten'</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token comment">-- 取后4个字符</span>SUBSTRING<span class="token punctuation">(</span><span class="token string">'kindergarten'</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">-- 从第三个字符起截取2个长度</span>LOCATE<span class="token punctuation">(</span><span class="token string">'n'</span><span class="token punctuation">,</span><span class="token string">'kindergarten'</span><span class="token punctuation">)</span> <span class="token comment">-- 查找，不区分大小写,返回第一次出现的位置</span><span class="token keyword">REPLACE</span><span class="token punctuation">(</span><span class="token string">'kindergarten'</span><span class="token punctuation">,</span><span class="token string">'garten'</span><span class="token punctuation">,</span><span class="token string">'garden'</span><span class="token punctuation">)</span> <span class="token comment">--替换</span>CONCAT<span class="token punctuation">(</span>‘<span class="token keyword">first</span>’<span class="token punctuation">,</span><span class="token string">'last'</span><span class="token punctuation">)</span> <span class="token comment">-- 拼接</span><span class="token comment">-- str为要截取的字符串，delim为分隔符，count为正从左到右，为负从右到左</span>SUBSTRING_INDEX<span class="token punctuation">(</span>str<span class="token punctuation">,</span><span class="token string">'delim'</span><span class="token punctuation">,</span>count<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="日期函数"><a href="#日期函数" class="headerlink" title="日期函数"></a>日期函数</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span>CURDATE<span class="token punctuation">(</span><span class="token punctuation">)</span>CURTIME<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">YEAR</span><span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">MONTH</span><span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">DAY</span><span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">HOUR</span><span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">MINUTE</span><span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">SECOND</span><span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>DAYNAME<span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">--返回字符串格式</span>MONTHNAME<span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>EXTRACT<span class="token punctuation">(</span><span class="token keyword">DAY</span> <span class="token keyword">FROM</span> <span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>DATE_FORMAT<span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'%m %d %Y'</span><span class="token punctuation">)</span>TIME_FORMAT<span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'%H:%i %p'</span><span class="token punctuation">)</span>DATE_ADD<span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">INTERVAL</span> <span class="token number">1</span> <span class="token keyword">DAY</span><span class="token punctuation">)</span> DATE_SUB<span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">INTERVAL</span> <span class="token number">1</span> <span class="token keyword">YEAR</span><span class="token punctuation">)</span>DATEDIFF<span class="token punctuation">(</span><span class="token string">'2019-01-05'</span><span class="token punctuation">,</span><span class="token string">'2019-01-01'</span><span class="token punctuation">)</span> <span class="token comment">-- 后减去前</span>TIME_TO_SEC<span class="token punctuation">(</span><span class="token string">'9:00'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="IFNULL-COALESCE"><a href="#IFNULL-COALESCE" class="headerlink" title="IFNULL COALESCE"></a>IFNULL COALESCE</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 若NULL则替代</span><span class="token keyword">SELECT</span> order_id<span class="token punctuation">,</span>    IFNULL<span class="token punctuation">(</span>shipper_id<span class="token punctuation">,</span><span class="token string">'Not assigned'</span><span class="token punctuation">)</span> <span class="token keyword">As</span> shipper<span class="token keyword">FROM</span> orders<span class="token comment">-- 第一个非NULL的值</span><span class="token keyword">SELECT</span> order_id<span class="token punctuation">,</span>    <span class="token keyword">COALESCE</span><span class="token punctuation">(</span>shipper_id<span class="token punctuation">,</span>comments<span class="token punctuation">,</span><span class="token string">'Not assigned'</span><span class="token punctuation">)</span> <span class="token keyword">As</span> shipper<span class="token keyword">FROM</span> orders <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="IF"><a href="#IF" class="headerlink" title="IF"></a>IF</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> product_id<span class="token punctuation">,</span>    name<span class="token punctuation">,</span>    <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> orders<span class="token punctuation">,</span>    <span class="token keyword">IF</span><span class="token punctuation">(</span><span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">></span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'Many times'</span><span class="token punctuation">,</span><span class="token string">'Once'</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> frequency<span class="token keyword">FROM</span> products<span class="token keyword">JOIN</span> order_items oi<span class="token keyword">USING</span> <span class="token punctuation">(</span>product_id<span class="token punctuation">)</span><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> product_id<span class="token punctuation">,</span>name<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="CASE"><a href="#CASE" class="headerlink" title="CASE"></a>CASE</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> order_id<span class="token punctuation">,</span>    <span class="token keyword">CASE</span><span class="token keyword">WHEN</span> <span class="token keyword">YEAR</span><span class="token punctuation">(</span>order_date<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">YEAR</span><span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">THEN</span> <span class="token string">'Active'</span>        <span class="token keyword">WHEN</span> <span class="token keyword">YEAR</span><span class="token punctuation">(</span>order_date<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">YEAR</span><span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span> <span class="token keyword">THEN</span> <span class="token string">'Last Year'</span>        <span class="token keyword">WHEN</span> <span class="token keyword">YEAR</span><span class="token punctuation">(</span>order_date<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token keyword">YEAR</span><span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span> <span class="token keyword">THEN</span> <span class="token string">'Archived'</span>        <span class="token keyword">ELSE</span> <span class="token string">'Future'</span><span class="token keyword">END</span> <span class="token keyword">AS</span> catagory<span class="token keyword">FROM</span> orders<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="第八章"><a href="#第八章" class="headerlink" title="第八章"></a>第八章</h2><h3 id="创建视图"><a href="#创建视图" class="headerlink" title="创建视图"></a>创建视图</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">VIEW</span> clients_balance <span class="token keyword">AS</span><span class="token keyword">SELECT</span> c<span class="token punctuation">.</span>client_id<span class="token punctuation">,</span>    c<span class="token punctuation">.</span>name<span class="token punctuation">,</span>    <span class="token function">SUM</span><span class="token punctuation">(</span>invoice_total<span class="token operator">-</span>payment_total<span class="token punctuation">)</span> <span class="token keyword">AS</span> balance<span class="token keyword">FROM</span> clients c<span class="token keyword">JOIN</span> invoices i <span class="token keyword">USING</span> <span class="token punctuation">(</span>client_id<span class="token punctuation">)</span><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> client_id<span class="token punctuation">,</span>name<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="更改或删除视图"><a href="#更改或删除视图" class="headerlink" title="更改或删除视图"></a>更改或删除视图</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">VIEW</span> clients_balance<span class="token keyword">CREATE</span> <span class="token operator">OR</span> <span class="token keyword">REPLACE</span> <span class="token keyword">VIEW</span> clients_balance <span class="token keyword">AS</span><span class="token keyword">SELECT</span> c<span class="token punctuation">.</span>client_id<span class="token punctuation">,</span>    c<span class="token punctuation">.</span>name<span class="token punctuation">,</span>    <span class="token function">SUM</span><span class="token punctuation">(</span>invoice_total<span class="token operator">-</span>payment_total<span class="token punctuation">)</span> <span class="token keyword">AS</span> balance<span class="token keyword">FROM</span> clients c<span class="token keyword">JOIN</span> invoices i <span class="token keyword">USING</span> <span class="token punctuation">(</span>client_id<span class="token punctuation">)</span><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> client_id<span class="token punctuation">,</span>name<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="可更新视图"><a href="#可更新视图" class="headerlink" title="可更新视图"></a>可更新视图</h3><p>不含DISTINCT、聚合函数、GROUP BY、HAVING、UNION</p><h3 id="WITH-OPTION-CHECK"><a href="#WITH-OPTION-CHECK" class="headerlink" title="WITH OPTION CHECK"></a>WITH OPTION CHECK</h3><p>防止行在更新后从视图中消失</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token operator">OR</span> <span class="token keyword">REPLACE</span> <span class="token keyword">VIEW</span> invoices_with_balance <span class="token keyword">AS</span><span class="token keyword">SELECT</span> invoice_id<span class="token punctuation">,</span>    number<span class="token punctuation">,</span>    client_id<span class="token punctuation">,</span>    invoice_total<span class="token punctuation">,</span>    payment_total<span class="token punctuation">,</span>    invoice_total<span class="token operator">-</span>payment_total <span class="token keyword">AS</span> balance<span class="token punctuation">,</span>    invoice_date<span class="token punctuation">,</span>    due_date<span class="token punctuation">,</span>    payment_date<span class="token keyword">FROM</span> invoices<span class="token keyword">WHERE</span> <span class="token punctuation">(</span>invoice_total<span class="token operator">-</span>payment_total<span class="token punctuation">)</span><span class="token operator">></span><span class="token number">0</span><span class="token keyword">WITH</span> <span class="token keyword">OPTION</span> <span class="token keyword">CHECK</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="视图的好处"><a href="#视图的好处" class="headerlink" title="视图的好处"></a>视图的好处</h3><p>简化查询、不用修改原表的查询代码、访问限制</p><h2 id="第九章"><a href="#第九章" class="headerlink" title="第九章"></a>第九章</h2><h3 id="创建存储过程"><a href="#创建存储过程" class="headerlink" title="创建存储过程"></a>创建存储过程</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DELIMITER</span> $$<span class="token keyword">CREATE</span> <span class="token keyword">PROCEDURE</span> get_clients<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">BEGIN</span><span class="token keyword">SELECT</span> <span class="token operator">*</span><span class="token keyword">FROM</span> clients<span class="token punctuation">;</span><span class="token keyword">END</span>$$<span class="token keyword">DELIMITER</span> <span class="token punctuation">;</span><span class="token keyword">CALL</span> get_clients<span class="token punctuation">(</span><span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="删除存储过程"><a href="#删除存储过程" class="headerlink" title="删除存储过程"></a>删除存储过程</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">PROCEDURE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> get_clients<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">PROCEDURE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> get_clients_by_state<span class="token punctuation">;</span><span class="token keyword">DELIMITER</span> $$<span class="token keyword">CREATE</span> <span class="token keyword">PROCEDURE</span> get_clients_by_state<span class="token punctuation">(</span>state <span class="token keyword">CHAR</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">BEGIN</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> clients c    <span class="token keyword">WHERE</span> c<span class="token punctuation">.</span>state<span class="token operator">=</span>state<span class="token punctuation">;</span><span class="token keyword">END</span> $$ <span class="token keyword">DELIMITER</span> <span class="token punctuation">;</span><span class="token keyword">CALL</span> get_clients_by_state<span class="token punctuation">(</span><span class="token string">'CA'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="默认参数"><a href="#默认参数" class="headerlink" title="默认参数"></a>默认参数</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">PROCEDURE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> get_clients_by_state<span class="token punctuation">;</span><span class="token keyword">DELIMITER</span> $$<span class="token keyword">CREATE</span> <span class="token keyword">PROCEDURE</span> get_clients_by_state<span class="token punctuation">(</span>state <span class="token keyword">CHAR</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">BEGIN</span><span class="token keyword">IF</span> state <span class="token operator">IS</span> <span class="token boolean">NULL</span> <span class="token keyword">THEN</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> clients c<span class="token punctuation">;</span><span class="token keyword">ELSE</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> clients c<span class="token keyword">WHERE</span> c<span class="token punctuation">.</span>state<span class="token operator">=</span>state<span class="token punctuation">;</span><span class="token keyword">END</span> <span class="token keyword">IF</span><span class="token punctuation">;</span><span class="token keyword">END</span> $$ <span class="token keyword">DELIMITER</span> <span class="token punctuation">;</span><span class="token keyword">CALL</span> get_clients_by_state<span class="token punctuation">(</span><span class="token boolean">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- 另一种写法</span><span class="token keyword">DROP</span> <span class="token keyword">PROCEDURE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> get_payments<span class="token punctuation">;</span><span class="token keyword">DELIMITER</span> $$<span class="token keyword">CREATE</span> <span class="token keyword">PROCEDURE</span> get_payments<span class="token punctuation">(</span>client_id <span class="token keyword">INT</span><span class="token punctuation">,</span>    payment_method_id <span class="token keyword">TINYINT</span><span class="token punctuation">)</span><span class="token keyword">BEGIN</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> payments p    <span class="token keyword">WHERE</span>p<span class="token punctuation">.</span>client_id<span class="token operator">=</span>IFNULL<span class="token punctuation">(</span>client_id<span class="token punctuation">,</span>p<span class="token punctuation">.</span>client_id<span class="token punctuation">)</span> <span class="token operator">AND</span>        p<span class="token punctuation">.</span>payment_method<span class="token operator">=</span>IFNULL<span class="token punctuation">(</span>payment_method_id<span class="token punctuation">,</span>p<span class="token punctuation">.</span>payment_method<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">END</span> $$ <span class="token keyword">DELIMITER</span> <span class="token punctuation">;</span><span class="token keyword">CALL</span> get_payments<span class="token punctuation">(</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="参数验证"><a href="#参数验证" class="headerlink" title="参数验证"></a>参数验证</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">DEFINER</span><span class="token operator">=</span><span class="token identifier"><span class="token punctuation">`</span>root<span class="token punctuation">`</span></span><span class="token variable">@`localhost`</span> <span class="token keyword">PROCEDURE</span> <span class="token identifier"><span class="token punctuation">`</span>make_payment<span class="token punctuation">`</span></span><span class="token punctuation">(</span>invoice_id <span class="token keyword">INT</span><span class="token punctuation">,</span>    payment_amount <span class="token keyword">DECIMAL</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    payment_date <span class="token keyword">DATE</span><span class="token punctuation">)</span><span class="token keyword">BEGIN</span><span class="token keyword">IF</span> payment_amount<span class="token operator">&lt;=</span><span class="token number">0</span> <span class="token keyword">THEN</span>SIGNAL SQLSTATE <span class="token string">'22003'</span><span class="token keyword">SET</span> MESSAGE_TEXT<span class="token operator">=</span><span class="token string">'Invalid payment'</span><span class="token punctuation">;</span><span class="token keyword">END</span> <span class="token keyword">IF</span><span class="token punctuation">;</span><span class="token keyword">UPDATE</span> invoices i    <span class="token keyword">SET</span>i<span class="token punctuation">.</span>payment_total<span class="token operator">=</span>payment_amount<span class="token punctuation">,</span>        i<span class="token punctuation">.</span>payment_date<span class="token operator">=</span>payment_date<span class="token keyword">WHERE</span> i<span class="token punctuation">.</span>invoice_id<span class="token operator">=</span>invoice_id<span class="token punctuation">;</span><span class="token keyword">END</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>尽量在应用中检测输入错误，数据库只保留关键判断</p><h3 id="输出参数"><a href="#输出参数" class="headerlink" title="输出参数"></a>输出参数</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">DEFINER</span><span class="token operator">=</span><span class="token identifier"><span class="token punctuation">`</span>root<span class="token punctuation">`</span></span><span class="token variable">@`localhost`</span> <span class="token keyword">PROCEDURE</span> <span class="token identifier"><span class="token punctuation">`</span>get_unpaid_invoices_for_client<span class="token punctuation">`</span></span><span class="token punctuation">(</span>client_id <span class="token keyword">INT</span><span class="token punctuation">,</span>    <span class="token keyword">OUT</span> invoices_count <span class="token keyword">INT</span><span class="token punctuation">,</span>    <span class="token keyword">OUT</span> invoices_total <span class="token keyword">DECIMAL</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token comment">--总共9位数，小数点后占2位</span><span class="token punctuation">)</span><span class="token keyword">BEGIN</span> <span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">SUM</span><span class="token punctuation">(</span>invoice_total<span class="token punctuation">)</span>    <span class="token keyword">INTO</span> invoices_count<span class="token punctuation">,</span>invoices_total    <span class="token keyword">FROM</span> invoices i    <span class="token keyword">WHERE</span> i<span class="token punctuation">.</span>client_id<span class="token operator">=</span>client_id<span class="token operator">AND</span> payment_total<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">END</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 用户或会话变量</span><span class="token keyword">SET</span> <span class="token variable">@invoices_count</span><span class="token operator">=</span><span class="token number">0</span><span class="token comment">-- 示例</span><span class="token keyword">CREATE</span> <span class="token keyword">DEFINER</span><span class="token operator">=</span><span class="token identifier"><span class="token punctuation">`</span>root<span class="token punctuation">`</span></span><span class="token variable">@`localhost`</span> <span class="token keyword">PROCEDURE</span> <span class="token identifier"><span class="token punctuation">`</span>get_risk_factor<span class="token punctuation">`</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">BEGIN</span><span class="token keyword">DECLARE</span> risk_factor <span class="token keyword">DECIMAL</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">DECLARE</span> invoices_total <span class="token keyword">DECIMAL</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">DECLARE</span> invoices_count <span class="token keyword">INT</span><span class="token punctuation">;</span>        <span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">SUM</span><span class="token punctuation">(</span>invoice_total<span class="token punctuation">)</span>    <span class="token keyword">INTO</span> invoices_count<span class="token punctuation">,</span>invoices_total    <span class="token keyword">FROM</span> invoices<span class="token punctuation">;</span>        <span class="token keyword">SET</span> risk_factor<span class="token operator">=</span>invoices_total<span class="token operator">/</span>invoices_count<span class="token operator">*</span><span class="token number">5</span><span class="token punctuation">;</span>        <span class="token keyword">SELECT</span> risk_factor<span class="token punctuation">;</span>    <span class="token keyword">END</span><span class="token comment">-- 本地变量</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><p>只能返回单一值<br>DETERMINISTIC：确定输入返回固定的输出<br>READS SQL DATA：包含读取数据<br>MODIFIES SQL DATE：包含修改数据</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">DEFINER</span><span class="token operator">=</span><span class="token identifier"><span class="token punctuation">`</span>root<span class="token punctuation">`</span></span><span class="token variable">@`localhost`</span> <span class="token keyword">FUNCTION</span> <span class="token identifier"><span class="token punctuation">`</span>get_risk_factor_for_client<span class="token punctuation">`</span></span><span class="token punctuation">(</span>client_id <span class="token keyword">INT</span><span class="token punctuation">)</span> <span class="token keyword">RETURNS</span> <span class="token keyword">int</span>    <span class="token keyword">READS</span> <span class="token keyword">SQL</span> <span class="token keyword">DATA</span><span class="token keyword">BEGIN</span><span class="token keyword">DECLARE</span> risk_factor <span class="token keyword">DECIMAL</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">DECLARE</span> invoices_total <span class="token keyword">DECIMAL</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">DECLARE</span> invoices_count <span class="token keyword">INT</span><span class="token punctuation">;</span>        <span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">SUM</span><span class="token punctuation">(</span>invoice_total<span class="token punctuation">)</span>    <span class="token keyword">INTO</span> invoices_count<span class="token punctuation">,</span>invoices_total    <span class="token keyword">FROM</span> invoices i    <span class="token keyword">WHERE</span> i<span class="token punctuation">.</span>client_id<span class="token operator">=</span>client_id<span class="token punctuation">;</span>        <span class="token keyword">SET</span> risk_factor<span class="token operator">=</span>invoices_total<span class="token operator">/</span>invoices_count<span class="token operator">*</span><span class="token number">5</span><span class="token punctuation">;</span><span class="token keyword">RETURN</span> IFNULL<span class="token punctuation">(</span>risk_factor<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">END</span><span class="token comment">-- 使用</span><span class="token keyword">SELECT</span> client_id<span class="token punctuation">,</span>    name<span class="token punctuation">,</span>     get_risk_factor_for_client<span class="token punctuation">(</span>client_id<span class="token punctuation">)</span><span class="token keyword">FROM</span> clients<span class="token comment">-- 删除</span><span class="token keyword">DROP</span> <span class="token keyword">FUNCTION</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> get_risk_factor_for_client<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="第十章"><a href="#第十章" class="headerlink" title="第十章"></a>第十章</h2><h3 id="触发器"><a href="#触发器" class="headerlink" title="触发器"></a>触发器</h3><p>触发器可修改除触发器所在表的任何表的内容</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DELIMITER</span> $$<span class="token keyword">CREATE</span> <span class="token keyword">TRIGGER</span> payments_after_delete<span class="token keyword">AFTER</span> <span class="token keyword">DELETE</span> <span class="token keyword">ON</span> payments    <span class="token keyword">FOR EACH ROW</span><span class="token keyword">BEGIN</span><span class="token keyword">UPDATE</span> invoices    <span class="token keyword">SET</span> payment_total<span class="token operator">=</span>payment_total<span class="token operator">-</span>OLD<span class="token punctuation">.</span>amount    <span class="token keyword">WHERE</span> invoice_id<span class="token operator">=</span>OLD<span class="token punctuation">.</span>invoice_id<span class="token punctuation">;</span><span class="token keyword">END</span> $$<span class="token keyword">DELIMITER</span> <span class="token punctuation">;</span><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> payments<span class="token keyword">WHERE</span> payment_id<span class="token operator">=</span><span class="token number">9</span>；<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="查看触发器"><a href="#查看触发器" class="headerlink" title="查看触发器"></a>查看触发器</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SHOW</span> TRIGGERS <span class="token operator">LIKE</span> <span class="token string">'payments%'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="删除触发器"><a href="#删除触发器" class="headerlink" title="删除触发器"></a>删除触发器</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">TRIGGER</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> payments_after_insert<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DELIMITER</span> $$<span class="token keyword">CREATE</span> EVENT year_delete_stale_audit_rows<span class="token keyword">ON</span> SCHEDULE<span class="token comment">-- AT '2015-05-01'</span>    EVERY <span class="token number">1</span> <span class="token keyword">YEAR</span> STARTS <span class="token string">'2019-01-01'</span> ENDS <span class="token string">'2029-01-01'</span><span class="token keyword">DO</span> <span class="token keyword">BEGIN</span><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> payments_audit    <span class="token keyword">WHERE</span> action_date<span class="token operator">&lt;</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token keyword">INTERVAL</span> <span class="token number">1</span> <span class="token keyword">YEAR</span><span class="token punctuation">;</span><span class="token keyword">END</span>$$<span class="token keyword">DELIMITER</span> <span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="查看、删除和更改事件"><a href="#查看、删除和更改事件" class="headerlink" title="查看、删除和更改事件"></a>查看、删除和更改事件</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SHOW</span> EVENTS<span class="token punctuation">;</span><span class="token keyword">DROP</span> EVENT <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> year_delete_stale_audit_rows<span class="token punctuation">;</span><span class="token keyword">ALTER</span> EVENT year_delete_stale_audit_rows <span class="token keyword">DISABLE</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="第十一章"><a href="#第十一章" class="headerlink" title="第十一章"></a>第十一章</h2><h3 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h3><p>原子性、一致性、隔离性、持久性 </p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">USE</span> sql_store<span class="token punctuation">;</span><span class="token keyword">START</span> <span class="token keyword">TRANSACTION</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> orders <span class="token punctuation">(</span>customer_id<span class="token punctuation">,</span>order_date<span class="token punctuation">,</span><span class="token keyword">status</span><span class="token punctuation">)</span><span class="token keyword">VALUEs</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'2019-01-01'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> order_items<span class="token keyword">VALUE</span> <span class="token punctuation">(</span>LAST_INSERT_ID<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">COMMIT</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="并发和锁定"><a href="#并发和锁定" class="headerlink" title="并发和锁定"></a>并发和锁定</h3><p>并发问题：</p><ul><li>丢失更新：两个事务更新同一行，后提交的覆盖前提交的</li><li>脏读：读取未提交的数据</li><li>不可重复读：在事务中读相同的两次但得到不同结果</li><li>幻读：查询中缺失了一行或多行，因为另一个事务进行了修改</li></ul><p>隔离等级：</p><ul><li>读未提交（<strong>READ UNCOMMITTED</strong>）</li><li>读已提交（<strong>READ COMMITTED</strong>）：解决脏读</li><li>可重复读取（<strong>REPEATABLE READ</strong>）：解决除幻读外的问题，mysql默认隔离模式</li><li>可序化（<strong>SERIALIZABLE</strong>）：解决所有问题</li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SHOW</span> VARIABLES <span class="token operator">LIKE</span> <span class="token string">'transaction_isolation'</span><span class="token punctuation">;</span><span class="token comment">-- 下一个事务</span><span class="token keyword">SET</span> <span class="token keyword">TRANSACTION</span> <span class="token keyword">ISOLATION</span> <span class="token keyword">LEVEL</span> <span class="token keyword">SERIALIZABLE</span><span class="token punctuation">;</span><span class="token comment">-- 当前会话的事务 *</span><span class="token keyword">SET</span> <span class="token keyword">SESSION</span> <span class="token keyword">TRANSACTION</span> <span class="token keyword">ISOLATION</span> <span class="token keyword">LEVEL</span> <span class="token keyword">SERIALIZABLE</span><span class="token punctuation">;</span><span class="token comment">-- 全局</span><span class="token keyword">SET</span> <span class="token keyword">GLOBAL</span> <span class="token keyword">TRANSACTION</span> <span class="token keyword">ISOLATION</span> <span class="token keyword">LEVEL</span> <span class="token keyword">SERIALIZABLE</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="死锁"><a href="#死锁" class="headerlink" title="死锁"></a>死锁</h3><h2 id="第十二章"><a href="#第十二章" class="headerlink" title="第十二章"></a>第十二章</h2><h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><ul><li>CHAR(x)：固定长度</li><li>VARCHAR(x)：可变长度，最大65535字节（64KB）</li><li>MEDIUMTEXT：16MB</li><li>LONGTEXT：4GB</li><li>TINYTEXT：255B</li><li>TEXT：64KB</li></ul><p>英文1字节，中文3字节</p><h3 id="整数"><a href="#整数" class="headerlink" title="整数"></a>整数</h3><ul><li>TINYINT (1b)</li><li>UNSIGNED TINYINT (1b)</li><li>SMALLINT (2b)</li><li>MEDIUMINT (3b)</li><li>INT (4b)</li><li>BIGINT (8b)</li></ul><h3 id="定点数和浮点数"><a href="#定点数和浮点数" class="headerlink" title="定点数和浮点数"></a>定点数和浮点数</h3><ul><li>DECIMAL(p,s)</li><li>FLOAT (4b)</li><li>DOUBLE (8b)</li></ul><h3 id="布尔类型"><a href="#布尔类型" class="headerlink" title="布尔类型"></a>布尔类型</h3><ul><li>BOOL</li><li>BOOLEN</li></ul><h3 id="枚举和集合"><a href="#枚举和集合" class="headerlink" title="枚举和集合"></a>枚举和集合</h3><ul><li>ENUM(‘small’,’medium’,’large’)</li><li>SET(…)<br>不建议使用，可创建查询表代替</li></ul><h3 id="日期和时间"><a href="#日期和时间" class="headerlink" title="日期和时间"></a>日期和时间</h3><ul><li>DATE</li><li>TIME</li><li>DATETIME</li><li>TIMESTAMP</li><li>YEAR</li></ul><h3 id="Blob"><a href="#Blob" class="headerlink" title="Blob"></a>Blob</h3><p>二进制数据文件,不建议存储</p><ul><li>TINYBLOB(255b)</li><li>BLOB(65KB)</li><li>MEDIUMBLOB(16MB)</li><li>LONGBLOB(4GB)</li></ul><h3 id="JSON"><a href="#JSON" class="headerlink" title="JSON"></a>JSON</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 法一</span><span class="token keyword">UPDATE</span> products<span class="token keyword">SET</span> properties<span class="token operator">=</span><span class="token string">'&#123;"dimensions":[1,2,3],    "weight":10,    "manufacturer":&#123;"name":"sony"&#125;&#125;'</span><span class="token keyword">WHERE</span> product_id<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">-- 法二</span><span class="token keyword">UPDATE</span> products<span class="token keyword">SET</span> properties<span class="token operator">=</span>JSON_OBJECT<span class="token punctuation">(</span><span class="token string">'weight'</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span>    <span class="token string">'dimensions'</span><span class="token punctuation">,</span>JSON_ARRAY<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token string">'manufacturer'</span><span class="token punctuation">,</span>JSON_OBJECT<span class="token punctuation">(</span><span class="token string">'name'</span><span class="token punctuation">,</span><span class="token string">'sony'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">WHERE</span> product_id<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">-- 更新json</span><span class="token keyword">UPDATE</span> products<span class="token keyword">SET</span> properties<span class="token operator">=</span>JSON_SET<span class="token punctuation">(</span>properties<span class="token punctuation">,</span>    <span class="token string">'$.weight'</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span>    <span class="token string">'$.age'</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token keyword">WHERE</span> product_id<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">-- 删除</span><span class="token keyword">UPDATE</span> products<span class="token keyword">SET</span> properties<span class="token operator">=</span>JSON_REMOVE<span class="token punctuation">(</span>properties<span class="token punctuation">,</span>    <span class="token string">'$.age'</span><span class="token punctuation">)</span><span class="token keyword">WHERE</span> product_id<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> product_id<span class="token punctuation">,</span>    properties<span class="token punctuation">,</span>    JSON_EXTRACT<span class="token punctuation">(</span>properties<span class="token punctuation">,</span><span class="token string">'$.weight'</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> weight<span class="token punctuation">,</span>    properties<span class="token operator">-</span><span class="token operator">></span><span class="token string">'$.dimensions[0]'</span> <span class="token keyword">AS</span> dimensions<span class="token punctuation">,</span>    properties<span class="token operator">-</span><span class="token operator">>></span><span class="token string">'$.manufacturer.name'</span> <span class="token keyword">AS</span> manufacturer<span class="token keyword">FROM</span> products<span class="token keyword">WHERE</span> properties<span class="token operator">-</span><span class="token operator">>></span><span class="token string">'$.manufacturer.name'</span><span class="token operator">=</span><span class="token string">'sony'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="第十三章"><a href="#第十三章" class="headerlink" title="第十三章"></a>第十三章</h2><h3 id="数据建模"><a href="#数据建模" class="headerlink" title="数据建模"></a>数据建模</h3><ul><li>理解和分析业务需求</li><li>建立概念模型</li><li>建立逻辑模型</li><li>建立实体模型</li></ul><h3 id="主键、外键"><a href="#主键、外键" class="headerlink" title="主键、外键"></a>主键、外键</h3><p>外键是在一张表中引用了另一张表主键的那列</p><h3 id="外键约束"><a href="#外键约束" class="headerlink" title="外键约束"></a>外键约束</h3><ul><li>CASCADE</li><li>RESTRICT</li><li>SET NULL</li><li>NO ACTION</li></ul><h3 id="标准化、范式"><a href="#标准化、范式" class="headerlink" title="标准化、范式"></a>标准化、范式</h3><p>链接表：处理多对多的情况（关系型数据库只能一对一或一对多）</p><ul><li>第一范式：一行中的每个单元格都有单一值，且无重复列</li><li>第二范式：符合第一范式，一张表只能代表一种实体，每列都用来描述这个实体</li><li>第三范式：符合第二范式，表中的列不能派生自其他列</li></ul><h3 id="创建和删除数据库"><a href="#创建和删除数据库" class="headerlink" title="创建和删除数据库"></a>创建和删除数据库</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> sql_store2<span class="token punctuation">;</span><span class="token keyword">DROP</span> <span class="token keyword">DATABASE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> sql_store2<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> sql_store2<span class="token punctuation">;</span><span class="token keyword">USE</span> sql_store2<span class="token punctuation">;</span><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> customers<span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> customers<span class="token punctuation">(</span>customer_id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>    first_name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    points <span class="token keyword">INT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span><span class="token punctuation">,</span>    email <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">UNIQUE</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="修改表"><a href="#修改表" class="headerlink" title="修改表"></a>修改表</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> customers<span class="token keyword">ADD</span> last_name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AFTER</span> first_name<span class="token punctuation">,</span>    <span class="token keyword">ADD</span> city <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    <span class="token keyword">MODIFY</span> <span class="token keyword">COLUMN</span> first_name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">55</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span><span class="token punctuation">,</span>    CHANGE <span class="token keyword">COLUMN</span> job profession <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token keyword">DROP</span> points<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="删除表"><a href="#删除表" class="headerlink" title="删除表"></a>删除表</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span>     exam_record_2011<span class="token punctuation">,</span>    exam_record_2012<span class="token punctuation">,</span>    exam_record_2013<span class="token punctuation">,</span>    exam_record_2014<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="创建关系"><a href="#创建关系" class="headerlink" title="创建关系"></a>创建关系</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> sql_store2<span class="token punctuation">;</span><span class="token keyword">USE</span> sql_store2<span class="token punctuation">;</span><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> orders<span class="token punctuation">;</span><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> customers<span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> customers<span class="token punctuation">(</span>customer_id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>    first_name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    points <span class="token keyword">INT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span><span class="token punctuation">,</span>    email <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">UNIQUE</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> orders<span class="token punctuation">(</span>order_id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>    customer_id <span class="token keyword">INT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    <span class="token keyword">CONSTRAINT</span> fk_orders_customers     <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>customer_id<span class="token punctuation">)</span><span class="token keyword">REFERENCES</span> customers <span class="token punctuation">(</span>customer_id<span class="token punctuation">)</span>        <span class="token keyword">ON</span> <span class="token keyword">UPDATE</span> <span class="token keyword">CASCADE</span>        <span class="token keyword">ON</span> <span class="token keyword">DELETE</span> <span class="token keyword">NO</span> <span class="token keyword">ACTION</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="更改主键、外键"><a href="#更改主键、外键" class="headerlink" title="更改主键、外键"></a>更改主键、外键</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> orders<span class="token keyword">ADD</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>order_id<span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token keyword">DROP</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>    <span class="token keyword">DROP</span> <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> fk_orders_customers<span class="token punctuation">,</span>    <span class="token keyword">ADD</span> <span class="token keyword">CONSTRAINT</span> fk_orders_customers     <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>customer_id<span class="token punctuation">)</span><span class="token keyword">REFERENCES</span> customers <span class="token punctuation">(</span>customer_id<span class="token punctuation">)</span>        <span class="token keyword">ON</span> <span class="token keyword">UPDATE</span> <span class="token keyword">CASCADE</span>        <span class="token keyword">ON</span> <span class="token keyword">DELETE</span> <span class="token keyword">NO</span> <span class="token keyword">ACTION</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="字符集和排序规则"><a href="#字符集和排序规则" class="headerlink" title="字符集和排序规则"></a>字符集和排序规则</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SHOW</span> <span class="token keyword">CHARSET</span>；<span class="token keyword">ALTER</span> <span class="token keyword">DATABASE</span> db_name<span class="token keyword">CHARACTER</span> <span class="token keyword">SET</span> latin1<span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> table1<span class="token keyword">CHARACTER</span> <span class="token keyword">SET</span> latin1<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="存储引擎"><a href="#存储引擎" class="headerlink" title="存储引擎"></a>存储引擎</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SHOW</span> ENGINES<span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> customers<span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="第十四章"><a href="#第十四章" class="headerlink" title="第十四章"></a>第十四章</h2><h3 id="创建索引"><a href="#创建索引" class="headerlink" title="创建索引"></a>创建索引</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">EXPLAIN</span><span class="token keyword">SELECT</span> customer_id <span class="token keyword">FROM</span> customers <span class="token keyword">WHERE</span> state<span class="token operator">=</span><span class="token string">'CA'</span> <span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">INDEX</span> idx_state <span class="token keyword">ON</span> customers <span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="查看索引"><a href="#查看索引" class="headerlink" title="查看索引"></a>查看索引</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SHOW</span> <span class="token keyword">INDEX</span> <span class="token operator">IN</span> customers<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="前缀索引"><a href="#前缀索引" class="headerlink" title="前缀索引"></a>前缀索引</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">INDEX</span> idx_lastname <span class="token keyword">ON</span> customers<span class="token punctuation">(</span>last_name<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token keyword">DISTINCT</span> <span class="token keyword">LEFT</span><span class="token punctuation">(</span>last_name<span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token keyword">DISTINCT</span> <span class="token keyword">LEFT</span><span class="token punctuation">(</span>last_name<span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token keyword">DISTINCT</span> <span class="token keyword">LEFT</span><span class="token punctuation">(</span>last_name<span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">FROM</span> customers<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="全文索引"><a href="#全文索引" class="headerlink" title="全文索引"></a>全文索引</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> FULLTEXT <span class="token keyword">INDEX</span> idx_title_body <span class="token keyword">ON</span> posts<span class="token punctuation">(</span>title<span class="token punctuation">,</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token punctuation">,</span> <span class="token keyword">MATCH</span><span class="token punctuation">(</span>title<span class="token punctuation">,</span>body<span class="token punctuation">)</span> AGAINST<span class="token punctuation">(</span><span class="token string">'react redux'</span><span class="token punctuation">)</span><span class="token keyword">FROM</span> posts<span class="token keyword">WHERE</span> <span class="token keyword">MATCH</span><span class="token punctuation">(</span>title<span class="token punctuation">,</span>body<span class="token punctuation">)</span> AGAINST<span class="token punctuation">(</span><span class="token string">'react redux'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token punctuation">,</span> <span class="token keyword">MATCH</span><span class="token punctuation">(</span>title<span class="token punctuation">,</span>body<span class="token punctuation">)</span> AGAINST<span class="token punctuation">(</span><span class="token string">'react redux'</span><span class="token punctuation">)</span><span class="token keyword">FROM</span> posts<span class="token keyword">WHERE</span> <span class="token keyword">MATCH</span><span class="token punctuation">(</span>title<span class="token punctuation">,</span>body<span class="token punctuation">)</span> AGAINST<span class="token punctuation">(</span><span class="token string">'react -redux +form'</span> <span class="token operator">IN</span> <span class="token keyword">BOOLEAN</span> <span class="token keyword">MODE</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token punctuation">,</span> <span class="token keyword">MATCH</span><span class="token punctuation">(</span>title<span class="token punctuation">,</span>body<span class="token punctuation">)</span> AGAINST<span class="token punctuation">(</span><span class="token string">'react redux'</span><span class="token punctuation">)</span><span class="token keyword">FROM</span> posts<span class="token keyword">WHERE</span> <span class="token keyword">MATCH</span><span class="token punctuation">(</span>title<span class="token punctuation">,</span>body<span class="token punctuation">)</span> AGAINST<span class="token punctuation">(</span><span class="token string">'"handling a form"'</span> <span class="token operator">IN</span> <span class="token keyword">BOOLEAN</span> <span class="token keyword">MODE</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="复合索引"><a href="#复合索引" class="headerlink" title="复合索引"></a>复合索引</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SHOW</span> <span class="token keyword">INDEX</span> <span class="token operator">IN</span> customers<span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">INDEX</span> idx_state_points <span class="token keyword">ON</span> customers<span class="token punctuation">(</span>state<span class="token punctuation">,</span>points<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">EXPLAIN</span> <span class="token keyword">SELECT</span> customer_id <span class="token keyword">FROM</span> customers<span class="token keyword">WHERE</span> state<span class="token operator">=</span><span class="token string">'CA'</span> <span class="token operator">AND</span> points<span class="token operator">></span><span class="token number">1000</span><span class="token punctuation">;</span><span class="token keyword">DROP</span> <span class="token keyword">INDEX</span> idx_state <span class="token keyword">ON</span> customers<span class="token punctuation">;</span><span class="token keyword">DROP</span> <span class="token keyword">INDEX</span> idx_points <span class="token keyword">ON</span> customers<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="复合索引的列顺序"><a href="#复合索引的列顺序" class="headerlink" title="复合索引的列顺序"></a>复合索引的列顺序</h3><ul><li>频繁使用的列放前面</li><li>把基数更高的列排前面（不一定）</li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">EXPLAIN</span> <span class="token keyword">SELECT</span> customer_id<span class="token keyword">FROM</span> customers<span class="token keyword">USE</span> <span class="token keyword">INDEX</span> <span class="token punctuation">(</span>idx_lastname_state<span class="token punctuation">)</span><span class="token keyword">WHERE</span> state<span class="token operator">=</span><span class="token string">'CA'</span> <span class="token operator">AND</span> last_name <span class="token operator">LIKE</span> <span class="token string">'A%'</span><span class="token punctuation">;</span> <span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token keyword">DISTINCT</span> state<span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token keyword">DISTINCT</span> last_name<span class="token punctuation">)</span><span class="token keyword">FROM</span> customers<span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">INDEX</span> idx_lastname_state <span class="token keyword">ON</span> customers<span class="token punctuation">(</span>last_name<span class="token punctuation">,</span>state<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="索引无效"><a href="#索引无效" class="headerlink" title="索引无效"></a>索引无效</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">INDEX</span> idx_points <span class="token keyword">ON</span> customers <span class="token punctuation">(</span>points<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">EXPLAIN</span> <span class="token keyword">SELECT</span> customer_id<span class="token keyword">FROM</span> customers<span class="token keyword">WHERE</span> state<span class="token operator">=</span><span class="token string">'CA'</span>    <span class="token keyword">UNION</span>    <span class="token keyword">SELECT</span> customer_id    <span class="token keyword">FROM</span> customers    <span class="token keyword">WHERE</span> points<span class="token operator">></span><span class="token number">1000</span><span class="token punctuation">;</span><span class="token comment">-- 索引生效</span><span class="token keyword">EXPLAIN</span> <span class="token keyword">SELECT</span> customer_id <span class="token keyword">FROM</span> customers<span class="token keyword">WHERE</span> points<span class="token operator">></span><span class="token number">2000</span><span class="token punctuation">;</span><span class="token comment">-- 索引失效</span><span class="token keyword">EXPLAIN</span> <span class="token keyword">SELECT</span> customer_id <span class="token keyword">FROM</span> customers<span class="token keyword">WHERE</span> points<span class="token operator">+</span><span class="token number">10</span><span class="token operator">></span><span class="token number">2010</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="使用索引排序"><a href="#使用索引排序" class="headerlink" title="使用索引排序"></a>使用索引排序</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- (a,b) 索引</span><span class="token comment">-- a</span><span class="token comment">-- a,b</span><span class="token comment">-- a DECSC, b DESC</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="覆盖索引"><a href="#覆盖索引" class="headerlink" title="覆盖索引"></a>覆盖索引</h3><p>覆盖索引：一个包含所有满足查询需要列的数据的索引<br>where<br>order by<br>select</p><h3 id="索引维护"><a href="#索引维护" class="headerlink" title="索引维护"></a>索引维护</h3><p>重复索引（a,b）（a,b）<br>多余索引（a,b）（a）</p><h2 id="第十五章"><a href="#第十五章" class="headerlink" title="第十五章"></a>第十五章</h2><h3 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">USER</span> john<span class="token variable">@127.0.0.1</span> IDENTIFIED <span class="token keyword">BY</span> <span class="token string">'1234'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="查看用户"><a href="#查看用户" class="headerlink" title="查看用户"></a>查看用户</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> mysql<span class="token punctuation">.</span><span class="token keyword">user</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">USER</span> john<span class="token variable">@127.0.0.1</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SET</span> PASSWORD <span class="token keyword">FOR</span> john<span class="token operator">=</span><span class="token string">'1234'</span><span class="token punctuation">;</span><span class="token comment">-- 更改当前用户密码</span><span class="token keyword">SET</span> PASSWORD <span class="token operator">=</span> <span class="token string">'1234'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="授予权限"><a href="#授予权限" class="headerlink" title="授予权限"></a>授予权限</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 1:web/desktop application</span><span class="token keyword">CREATE</span> <span class="token keyword">USER</span> moon_app IDENTIFIED <span class="token keyword">BY</span> <span class="token string">'1234'</span><span class="token punctuation">;</span><span class="token keyword">GRANT</span> <span class="token keyword">SELECT</span><span class="token punctuation">,</span><span class="token keyword">INSERT</span><span class="token punctuation">,</span><span class="token keyword">UPDATE</span><span class="token punctuation">,</span><span class="token keyword">DELETE</span><span class="token punctuation">,</span><span class="token keyword">EXECUTE</span><span class="token keyword">ON</span> sql_store<span class="token punctuation">.</span><span class="token operator">*</span><span class="token keyword">TO</span> moon_app<span class="token punctuation">;</span><span class="token comment">-- 2: admin</span><span class="token keyword">GRANT</span> <span class="token keyword">ALL</span><span class="token keyword">ON</span> <span class="token operator">*</span><span class="token punctuation">.</span><span class="token operator">*</span><span class="token keyword">TO</span> john<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="查看权限"><a href="#查看权限" class="headerlink" title="查看权限"></a>查看权限</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 当前用户</span><span class="token keyword">SHOW</span> GRANTS<span class="token punctuation">;</span><span class="token comment">-- 指定用户</span><span class="token keyword">SHOW</span> GRANTS <span class="token keyword">FOR</span> moon_app<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="撤销权限"><a href="#撤销权限" class="headerlink" title="撤销权限"></a>撤销权限</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">GRANT</span> <span class="token keyword">CREATE</span> <span class="token keyword">VIEW</span> <span class="token keyword">ON</span> sql_store<span class="token punctuation">.</span><span class="token operator">*</span><span class="token keyword">TO</span> moon_app<span class="token punctuation">;</span><span class="token keyword">REVOKE</span> <span class="token keyword">CREATE</span> <span class="token keyword">VIEW</span> <span class="token keyword">ON</span> sql_store<span class="token punctuation">.</span><span class="token operator">*</span><span class="token keyword">FROM</span> moon_app<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>test</title>
      <link href="/2024/05/02/test/"/>
      <url>/2024/05/02/test/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>c++队列及栈的用法</title>
      <link href="/2023/11/23/c-dui-lie-ji-zhan-de-yong-fa/"/>
      <url>/2023/11/23/c-dui-lie-ji-zhan-de-yong-fa/</url>
      
        <content type="html"><![CDATA[<h2 id="队列"><a href="#队列" class="headerlink" title="队列"></a>队列</h2><h3 id="常规队列"><a href="#常规队列" class="headerlink" title="常规队列"></a>常规队列</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">queue<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> q<span class="token punctuation">;</span>q<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>q<span class="token punctuation">.</span><span class="token function">front</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>q<span class="token punctuation">.</span><span class="token function">back</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>q<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>q<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>q<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="优先级队列"><a href="#优先级队列" class="headerlink" title="优先级队列"></a>优先级队列</h3><p>底层为大小堆实现，默认使用大顶堆，即队首元素最大。</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">priority_queue<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">,</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span><span class="token punctuation">,</span>less<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">>></span> q1<span class="token punctuation">;</span> <span class="token comment">//大顶堆</span>priority_queue<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">,</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span><span class="token punctuation">,</span>greater<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">>></span> q2； <span class="token comment">//小顶堆</span>q<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>q<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>q<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>q<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>q<span class="token punctuation">.</span><span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>自定义结构体重载</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">struct</span> <span class="token class-name">test</span><span class="token punctuation">&#123;</span>  <span class="token keyword">int</span> val<span class="token punctuation">;</span>  <span class="token function">test</span><span class="token punctuation">(</span><span class="token keyword">int</span> v<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token operator">-></span>val<span class="token operator">=</span>v<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>；<span class="token keyword">struct</span> <span class="token class-name">cmp</span><span class="token punctuation">&#123;</span>  <span class="token keyword">bool</span> <span class="token keyword">operator</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token keyword">const</span> test t1<span class="token punctuation">,</span><span class="token keyword">const</span> test t2<span class="token punctuation">)</span><span class="token keyword">const</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> t1<span class="token punctuation">.</span>val<span class="token operator">&lt;</span>t2<span class="token punctuation">.</span>val<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>；priority_queue<span class="token operator">&lt;</span>test<span class="token punctuation">,</span>vector<span class="token operator">&lt;</span>test<span class="token operator">></span><span class="token punctuation">,</span>cmp<span class="token operator">></span> q<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">struct</span> <span class="token class-name">test</span><span class="token punctuation">&#123;</span>  <span class="token keyword">int</span> val<span class="token punctuation">;</span>  <span class="token function">test</span><span class="token punctuation">(</span><span class="token keyword">int</span> v<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token operator">-></span>val<span class="token operator">=</span>v<span class="token punctuation">;</span><span class="token punctuation">&#125;</span>  <span class="token keyword">bool</span> <span class="token keyword">operator</span> <span class="token operator">></span> <span class="token punctuation">(</span><span class="token keyword">const</span> test t<span class="token punctuation">)</span><span class="token keyword">const</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> val<span class="token operator">></span>t<span class="token punctuation">.</span>val<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">bool</span> <span class="token keyword">operator</span> <span class="token operator">&lt;</span> <span class="token punctuation">(</span><span class="token keyword">const</span> test t<span class="token punctuation">)</span><span class="token keyword">const</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> val<span class="token operator">&lt;</span>t<span class="token punctuation">.</span>val<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>；priority_queue<span class="token operator">&lt;</span>test<span class="token punctuation">,</span>vector<span class="token operator">&lt;</span>test<span class="token operator">></span><span class="token punctuation">,</span>less<span class="token operator">&lt;</span>test<span class="token operator">>></span> q<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="栈"><a href="#栈" class="headerlink" title="栈"></a>栈</h2><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">stack<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> s<span class="token punctuation">;</span>s<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>s<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>s<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>s<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>s<span class="token punctuation">.</span><span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用github+hexo搭建博客</title>
      <link href="/2023/07/30/shi-yong-github-hexo-da-jian-bo-ke/"/>
      <url>/2023/07/30/shi-yong-github-hexo-da-jian-bo-ke/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>当我在搭建博客时，就想着把<strong>如何搭建博客</strong>作为搭建完博客后的第一篇博客(混乱)，毕竟在这个过程中踩了好多坑，有些问题明明很简单，却因为不熟悉而在这上面花了大量时间。这篇博客也就当作对这个过程的一个复盘，如果其中的内容对你有帮助的话就再好不过了。</p><h2 id="安装Homebrew"><a href="#安装Homebrew" class="headerlink" title="安装Homebrew"></a>安装Homebrew</h2><p>如果是第一次用macOS，需要先安装<code>homebrew</code>，这是一个macOS平台下的软件管理包，类似windows中的<code>pip</code>。在终端中输入如下命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">/bin/zsh <span class="token parameter variable">-c</span> <span class="token string">"<span class="token variable"><span class="token variable">$(</span><span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> https://gitee.com/huwei1024/HomebrewCN/raw/master/Homebrew.sh<span class="token variable">)</span></span>"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>由于官网直连可能失败，这里是在<code>gitee</code>上下载。如果使用代理的话，要记得额外给终端设置代理端口。</p><p>安装完成后在终端输入<code>brew -v</code>，若显示版本号，则表明安装成功。</p><h2 id="安装node"><a href="#安装node" class="headerlink" title="安装node"></a>安装node</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">brew <span class="token function">install</span> <span class="token function">node</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>安装完后输入<code>node -v</code>和<code>npm -v</code>，返回版本号则表明安装成功。</p><p>为提升下载速度，可给npm换源</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> config get registry    <span class="token comment">#查看当前源</span><span class="token function">npm</span> config <span class="token builtin class-name">set</span> registry https://registry.npmmirror.com/    <span class="token comment">#更换镜像源</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-cli <span class="token parameter variable">-g</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>其中<code>-g</code>表示全局安装，若删去则表示仅在当前文件夹安装。安装完后输入<code>hexo -v</code>，返回版本号则表明安装成功。<br>接着新建一个文件夹（如“blog”）用来存放博客相关文件，输入<code>cd blog</code>进入该目录后，输入如下命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo init        <span class="token comment">#初始化文件夹</span><span class="token function">npm</span> <span class="token function">install</span>      <span class="token comment">#安装相应组件</span>hexo g           <span class="token comment">#生成静态网页</span>hexo s           <span class="token comment">#打开本地服务器</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>全部完成后，打开浏览器，输入<a href="http://localhost:4000/">http://localhost:4000/</a> , 即可在本地查看当前博客界面。想关闭本地服务器，则在终端按下<code>control+c</code>即可。</p><h2 id="新建github仓库"><a href="#新建github仓库" class="headerlink" title="新建github仓库"></a>新建github仓库</h2><p>经过上边的步骤，博客已经初步搭建好了，但只能在本地浏览。要想他人也能访问，可将其托管在<code>github</code>上。<br>首先进入<a href="https://github.com/">https://github.com</a> 网页，登陆自己的账号后，点击右上角自己的头像，找到<code>Your repositories</code>，进入后，点击右上角的<code>New</code>新建一个仓库，在<code>Respository name</code>中输入<code>yourname.github.io</code>,这里的<code>yourname</code>是你gitbub账号的名称，即前面<code>Owner</code>中显示的内容。勾选下方<code>Add a README file</code>后，点击最下面的<code>Create repository</code>完成仓库的创建。</p><h2 id="使用git连接Github和本地"><a href="#使用git连接Github和本地" class="headerlink" title="使用git连接Github和本地"></a>使用git连接Github和本地</h2><p>使用如下命令安装<code>git</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">brew <span class="token function">install</span> <span class="token function">git</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>安装完成后，输入如下命令链接你的github账号</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config <span class="token parameter variable">--global</span> user.name <span class="token string">"yourname"</span>     <span class="token comment">#你的github账号名称</span><span class="token function">git</span> config <span class="token parameter variable">--global</span> user.email <span class="token string">"youremail"</span>   <span class="token comment">#注册github账号的邮箱</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>之后输入如下命令生成ssh密钥</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ssh-keygen <span class="token parameter variable">-t</span> rsa <span class="token parameter variable">-C</span> <span class="token string">"youremail"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>其中需要输入的时候直接按<code>回车</code>即可。</p><p>之后输入如下命令获取ssh密钥</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cat</span> ~/.ssh/id_rsa.pub<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>打开<a href="github.com">github</a>，点击头像找到<code>Settings</code>,进入<code>SSH and GPG keys</code>，点击<code>New SSH key</code>，名字可随便取，在<code>key</code>中填入上面生成的ssh密钥，点击<code>Add SSH key</code>完成添加。</p><p>输入如下命令测试是否连接成功</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ssh</span> <span class="token parameter variable">-T</span> git@github.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果出现了你的用户名，则代表成功</p><h2 id="写文章及发布文章"><a href="#写文章及发布文章" class="headerlink" title="写文章及发布文章"></a>写文章及发布文章</h2><p>先更改一下<code>blog</code>目录中<code>_config.yml</code>文件最后一行的配置</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">deploy:  type: <span class="token function">git</span>  repository: https://github.com/yourname/yourname.github.io      <span class="token comment">#你的仓库地址</span>  branch: main<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>输入以下命令安装扩展</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i hexo-deployer-git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>新建文章</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new <span class="token string">"title"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>生成的文章为<code>.md</code>文件，存储在<code>blog/source/_posts</code>中，可按照<code>markdown</code>格式编辑。<br>编辑完文章后，输入<code>hexo g</code>生成静态网页，输入<code>hexo s</code>可在本地预览(非必需)，输入<code>hexo d</code>将本地文件上传至github。之后只需要在网址输入<code>yourname.github.io</code>即可查看你的博客了(可能会有一点延迟)。</p><h2 id="主题美化"><a href="#主题美化" class="headerlink" title="主题美化"></a>主题美化</h2><p>完成以上的步骤后，博客基本的功能已经实现了，剩下可以通过修改主题对其进行美化。本博客使用的主题是<a href="https://github.com/blinkfox/hexo-theme-matery/tree/develop">hexo-theme-matery</a>，按照作者的说明逐步配置即可。</p><h2 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h2><p>不得不说，搭建自己的博客确实是一件非常有意思的事情。由于本人是第一次使用macOS系统，搭建的过程也加深了我对系统的一些了解，总的来说收获颇多。</p><p>最后，<strong>完结撒花！</strong></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> hexo </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
